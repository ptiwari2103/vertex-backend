<%- contentFor('title') %>Distributor Management - Vertex Admin

    <%- contentFor('style') %>
        <style>
            .main-content {
                padding: 20px;
            }

            .welcome-section {
                background: white;
                padding: 20px;
                border-radius: 10px;
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
                margin-bottom: 20px;
            }

            .table-section {
                background: #fff;
                padding: 20px;
                border-radius: 8px;
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
            }

            /* Fixed header styles */
            .table-responsive {
                max-height: 70vh;
                overflow-y: auto;
            }

            .table-fixed-header {
                position: relative;
            }

            .table-fixed-header thead th {
                position: sticky;
                top: 0;
                background-color: #f8f9fa;
                z-index: 1;
                border-bottom: 2px solid #dee2e6;
                box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
            }

            /* Add some padding to the header cells for better appearance */
            .table-fixed-header th {
                padding: 12px 8px;
            }

            /* Ensure the table takes full width */
            .table-fixed-header {
                width: 100%;
            }

            .date-filter {
                max-width: 150px;
            }

            .status-badge {
                padding: 5px 10px;
                border-radius: 15px;
                font-size: 12px;
                font-weight: 500;
                cursor: pointer;
            }

            .status-active {
                background-color: #d4edda;
                color: #155724;
            }

            .status-pending {
                background-color: #fff3cd;
                color: #856404;
            }

            .status-inactive {
                background-color: #f8d7da;
                color: #721c24;
            }

            .action-btn {
                padding: 5px 10px;
                font-size: 14px;
                margin: 0 2px;
            }
        </style>



        <%- contentFor('body') %>
            <div class="main-content">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h2 class="mb-0">Distributors</h2>
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addDistributorModal">
                        <i class="bx bx-plus"></i> Add Distributor
                    </button>
                </div>

                <div class="table-section">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>S.No.</th>
                                    <th>User</th>
                                    <th>Login User ID</th>
                                    <th>Password</th>
                                    <th>Status</th>
                                    <th>Created At</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% if (distributors.length===0) { %>
                                    <tr>
                                        <td colspan="4" class="text-center">No distributors found.</td>
                                    </tr>
                                    <% } else { %>
                                        <% distributors.forEach((distributor, idx)=> { %>
                                            <tr>
                                                <td>
                                                    <%= idx + 1 %>
                                                </td>
                                                <td>
                                                    <%= distributor?.tmp_user || distributor?.user?.name + ' (' +
                                                        distributor?.user?.user_id + ')' || '--' %>
                                                </td>
                                                <td>
                                                    <%= distributor.login_user_id %>
                                                </td>
                                                <td>
                                                    <%= distributor.password %>
                                                </td>
                                                <td>
                                                    <span
                                                        class="status-badge <%= distributor.status.toLowerCase() === 'active' ? 'status-active' : 'status-inactive' %>"
                                                        onclick="openDistributorStatusModal('<%= distributor.id %>', '<%= distributor.status %>')">
                                                        <%= distributor.status %>
                                                    </span>
                                                </td>
                                                <td>
                                                    <%= distributor.created_at ?
                                                        distributor.created_at.toLocaleDateString() : '' %>
                                                </td>

                                                <td>
                                                    <% const isDeletable=!delete_probation_id.includes(distributor.id);
                                                        %>
                                                        <% if (isDeletable) { %>
                                                            <button class="btn btn-danger btn-sm"
                                                                onclick="deleteDistributor(<%= distributor.id %>)">
                                                                Delete
                                                            </button>
                                                            <% } else { %>
                                                                <span
                                                                    title="You can not delete since already used in gift distributor">
                                                                    <button class="btn btn-danger btn-sm" disabled>
                                                                        Delete
                                                                    </button>
                                                                </span>
                                                                <% } %>
                                                </td>
                                            </tr>
                                            <% }) %>
                                                <% } %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Add Distributor Modal -->
            <div class="modal fade" id="addDistributorModal" tabindex="-1" aria-labelledby="addDistributorModalLabel"
                aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <form action="/gifts/distributor/create" method="POST">
                            <div class="modal-header">
                                <h5 class="modal-title" id="addDistributorModalLabel">Add Distributor</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"
                                    aria-label="Close"></button>
                            </div>
                            <div class="modal-body">

                                <div class="mb-3">
                                    <label class="form-label">User ID</label>
                                    <input
                                        type="text"
                                        placeholder="Enter user ID"
                                        id="userIdInput"
                                        required
                                        class="form-control"
                                        autocomplete="off"
                                        name="user_id_input"
                                        maxlength="6"
                                    />
                                    <div id="userIdError" class="text-danger mt-1" style="display: none;"></div>
                                    <div id="userIdSuccess" class="text-success mt-1" style="display: none;"></div>
                                </div>
                                <!-- Distributor To -->
                                <div class="mb-3">
                                    <label class="form-label">Distributor To</label>
                                    <select class="form-select" name="user_id" id="userSelect">
                                        <option value="">Select Member</option>                                        
                                    </select>
                                </div>

                                <!-- OR Separator -->
                                <div class="text-center my-3 position-relative">
                                    <hr>
                                    <span
                                        class="position-absolute top-50 start-50 translate-middle bg-white px-3 text-muted fw-bold">
                                        OR
                                    </span>
                                </div>

                                <!-- Temporary User -->
                                <div class="mb-3">
                                    <label for="distributorTmpUser" class="form-label">Temporary User</label>
                                    <input type="text" class="form-control" id="distributorTmpUser" name="tmp_user">
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-primary">Add Distributor</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>



            <!-- Distributor Status Update Modal -->
            <div class="modal fade" id="distributorStatusModal" tabindex="-1"
                aria-labelledby="distributorStatusModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="distributorStatusModalLabel">Update Distributor Status</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <input type="hidden" id="distributorStatusId">
                            <div class="mb-3">
                                <label for="distributorStatusSelect" class="form-label">Status</label>
                                <select id="distributorStatusSelect" class="form-select">
                                    <option value="Active">Active</option>
                                    <option value="Inactive">Inactive</option>
                                </select>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-primary"
                                onclick="confirmDistributorStatusUpdate()">Update</button>
                        </div>
                    </div>
                </div>
            </div>

            <%- contentFor('script') %>
                <script>
                    document.addEventListener('DOMContentLoaded', function() {
                        // User ID input handling
                        const userIdInput = document.getElementById('userIdInput');
                        const userSelect = document.getElementById('userSelect');
                        const userIdError = document.getElementById('userIdError');
                        const userIdSuccess = document.getElementById('userIdSuccess');
                        const tmpUserInput = document.getElementById('distributorTmpUser');

                        if (userIdInput) {
                            userIdInput.addEventListener('input', function() {
                                // alert('Input changed');
                                // Clear previous messages
                                userIdError.style.display = 'none';
                                userIdSuccess.style.display = 'none';
                                
                                // Reset select dropdown
                                //userSelect.innerHTML = '<option value="">Select Member</option>';
                                userSelect.innerHTML = '';

                                const userId = this.value;
                                
                                // Check if user ID is 6 digits
                                if (userId && userId.length === 6) {
                                    // Make API call to check user status
                                    fetch('/gifts/member/gift-status', {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json'
                                        },
                                        body: JSON.stringify({ user_id: userId })
                                    })
                                    .then(response => response.json())
                                    .then(data => {
                                        if (data.success) {
                                            const user = data.user;
                                            // Add user to dropdown
                                            const option = document.createElement('option');
                                            option.value = user.id;
                                            option.textContent = user.name + ' (' + user.user_id + ')';
                                            userSelect.appendChild(option);
                                            option.selected = true;
                                            
                                            // Show success message
                                            userIdSuccess.textContent = 'User found and added to dropdown.';
                                            userIdSuccess.style.display = 'block';

                                            tmpUserInput.disabled = true;
                                            tmpUserInput.value = '';
                                    
                                        } else {
                                            // Show error message
                                            userIdError.textContent = data.message || 'Error finding user.';
                                            userIdError.style.display = 'block';
                                            tmpUserInput.disabled = false;
                                            userSelect.innerHTML = '<option value="">Select Member</option>';
                                        }
                                    })
                                    .catch(error => {
                                        console.error('Error:', error);
                                        userIdError.textContent = 'Server error. Please try again.';
                                        userIdError.style.display = 'block';
                                    });
                                }
                            });
                        }

                        // User select change handling
                        // if (userSelect && tmpUserInput) {
                        //     userSelect.addEventListener('change', function () {
                        //         if (this.value) {
                        //             tmpUserInput.disabled = true;
                        //             tmpUserInput.value = '';
                        //         } else {
                        //             tmpUserInput.disabled = false;
                        //         }
                        //     });
                        // }
                    });

                    // Distributor functions
                    function deleteDistributor(id) {
                        if (!confirm('Are you sure you want to delete this distributor?')) return;
                        fetch(`/gifts/distributor/${id}`, {
                            method: 'DELETE'
                        })
                            .then(res => res.json())
                            .then(data => {
                                if (data.success) {
                                    window.location.reload();
                                } else {
                                    alert(data.message || 'Failed to delete distributor');
                                }
                            });
                    }

                    let currentDistributorId = null;

                    function openDistributorStatusModal(id, currentStatus) {
                        currentDistributorId = id;
                        document.getElementById('distributorStatusSelect').value = currentStatus;
                        const modal = new bootstrap.Modal(document.getElementById('distributorStatusModal'));
                        modal.show();
                    }

                    function confirmDistributorStatusUpdate() {
                        const newStatus = document.getElementById('distributorStatusSelect').value;
                        fetch(`/gifts/distributor/${currentDistributorId}/status`, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ status: newStatus })
                        })
                            .then(res => res.json())
                            .then(data => {
                                if (data.success) {
                                    window.location.reload();
                                } else {
                                    alert(data.message || 'Failed to update status');
                                }
                            });
                    }
                </script>