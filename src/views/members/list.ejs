<%- contentFor('title') %>Members - Vertex Admin

<%- contentFor('style') %>
<style>
    .main-content {
        padding: 20px;
    }
    .welcome-section {
        background: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
        margin-bottom: 20px;
    }
    .member-table {
        background: white;
        border-radius: 10px;
        box-shadow: 0 0 20px rgba(0,0,0,0.1);
    }
    .member-table th {
        background-color: #f8f9fa;
        border: none;
    }
    .member-table td {
        vertical-align: middle;
    }
    .status-badge {
        padding: 5px 10px;
        border-radius: 15px;
        font-size: 12px;
        font-weight: 500;
        cursor: pointer;
    }
    .status-active {
        background-color: #d4edda;
        color: #155724;
    }
    .status-pending {
        background-color: #fff3cd;
        color: #856404;
    }
    .status-inactive {
        background-color: #f8d7da;
        color: #721c24;
    }
    .action-btn {
        padding: 5px 10px;
        font-size: 14px;
        margin: 0 2px;
    }
    .pagination {
        margin-top: 20px;
        justify-content: center;
    }
    .pagination .page-item.active .page-link {
        background-color: #007bff;
        border-color: #007bff;
    }
    .member-details-modal .modal-body {
        padding: 20px;
    }
    .member-details-modal .detail-row {
        margin-bottom: 15px;
    }
    .member-details-modal .detail-label {
        font-weight: bold;
        color: #6c757d;
    }
</style>

<%- contentFor('body') %>
<div class="main-content">
    <div class="welcome-section">
        <div class="d-flex justify-content-between align-items-center">
            <h2 class="mb-0">Members Management</h2>
            <div>
                <span class="mr-3">Total Members: <%= pagination.count %></span>
                <!-- <a href="/members/add" class="btn btn-primary">
                    <i class="bx bx-plus"></i> Add Member
                </a> -->
            </div>
        </div>
    </div>

    <div class="card member-table">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>User ID</th>
                            <th>Account ID</th>
                            <th>Name</th>
                            <th>Status</th>
                            <th>Created At</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% user.forEach(member => { %>
                            <tr>
                                <td><%= member.user_id %></td>
                                <td><%= member.account_number %></td>
                                <td><%= member.name %></td>
                                <td>
                                    <span class="status-badge <%= member.status.toLowerCase() === 'active' ? 'status-active' : 
                                        member.status.toLowerCase() === 'pending' ? 'status-pending' : 'status-inactive' %>"
                                        onclick="updateStatus('<%= member.id %>', '<%= member.status %>')">
                                        <%= member.status %>
                                    </span>
                                </td>
                                <td><%= new Date(member.created_date).toLocaleDateString() %></td>
                                <td>
                                    <button class="btn btn-sm btn-info action-btn" onclick="viewMember('<%= member.id %>')">
                                        <i class="bx bx-show"></i>
                                    </button>
                                    <button class="btn btn-sm btn-danger action-btn" onclick="deleteMember('<%= member.id %>')">
                                        <i class="bx bx-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>

            <% if (pagination.total > 1) { %>
                <nav>
                    <ul class="pagination">
                        <% for(let i = 1; i <= pagination.total; i++) { %>
                            <li class="page-item <%= pagination.current === i ? 'active' : '' %>">
                                <a class="page-link" href="/members/allmembers?page=<%= i %>"><%= i %></a>
                            </li>
                        <% } %>
                    </ul>
                </nav>
            <% } %>
        </div>
    </div>
</div>

<!-- Member Details Modal -->
<div class="modal fade member-details-modal" id="memberDetailsModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Member Details</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Content will be dynamically loaded -->
            </div>
        </div>
    </div>
</div>

<%- contentFor('script') %>
<script>
    async function updateStatus(id, currentStatus) {
        const statuses = ['Active', 'Pending', 'Inactive', 'Blocked'];
        const currentIndex = statuses.indexOf(currentStatus);
        const nextStatus = statuses[(currentIndex + 1) % statuses.length];

        if (confirm(`Change status to ${nextStatus}?`)) {
            try {
                const response = await fetch(`/members/${id}/status`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ status: nextStatus })
                });

                if (response.ok) {
                    location.reload();
                } else {
                    const data = await response.json();
                    alert(data.message || 'Failed to update status');
                }
            } catch (error) {
                console.error('Error updating status:', error);
                alert('Failed to update status');
            }
        }
    }

    async function viewMember(id) {
        try {
            const response = await fetch(`/members/${id}`);
            const data = await response.json();

            if (data.success) {
                const member = data.member;
                const modalBody = document.querySelector('.member-details-modal .modal-body');
                modalBody.innerHTML = `
                    <div class="detail-row">
                        <div class="detail-label">User ID</div>
                        <div>${member.user_id}</div>
                    </div>
                    <div class="detail-row">
                        <div class="detail-label">Name</div>
                        <div>${member.name}</div>
                    </div>
                    <div class="detail-row">
                        <div class="detail-label">Status</div>
                        <div>${member.status}</div>
                    </div>
                    <div class="detail-row">
                        <div class="detail-label">Created Date</div>
                        <div>${new Date(member.created_date).toLocaleDateString()}</div>
                    </div>
                `;
                $('#memberDetailsModal').modal('show');
            } else {
                alert(data.message || 'Failed to fetch member details');
            }
        } catch (error) {
            console.error('Error viewing member:', error);
            alert('Failed to fetch member details');
        }
    }

    async function deleteMember(id) {
        if (confirm('Are you sure you want to delete this member?')) {
            try {
                const response = await fetch(`/members/${id}`, {
                    method: 'DELETE'
                });

                const data = await response.json();
                if (data.success) {
                    location.reload();
                } else {
                    alert(data.message || 'Failed to delete member');
                }
            } catch (error) {
                console.error('Error deleting member:', error);
                alert('Failed to delete member');
            }
        }
    }
</script>
